const _=require("lodash"),MESSAGE_RIGHT_ANSWER="정답을 반환해야합니다",MESSAGE_CALL_COUNT="함수가 필요한 만큼 호출되어야합니다",MESSAGE_NO_MUTATION="원본 데이터에 영향을 주지 않아야합니다",callCounterMessage=(e,n,t)=>`${e}: ${n}번 호출되어야하는데, ${t}번 호출됐습니다`,callCounterMessageGEQ=(e,n,t)=>`${e}: ${n}번 이상 호출되어야하는데, ${t}번 호출됐습니다`,callCounterMessageLEQ=(e,n,t)=>`${e}: ${n}번 이하 호출되어야하는데, ${t}번 호출됐습니다`,assertCallCounter=(e,n,t)=>{expect(n[e]).toBe(t[e],callCounterMessage(e,t[e],n[e]))},iterateIt=(e,n,t)=>{let r=t||10;for(let t=0;t<r;t++)it(`${e} - #${t+1}`,n)},fnKeys=["concat","copyWithin","fill","find","findIndex","lastIndexOf","pop","push","reverse","shift","unshift","slice","sort","splice","includes","indexOf","keys","entries","forEach","filter","map","every","some","reduce","reduceRight","toString","toLocaleString","join","values","flat","flatMap"];function randomStringGenerator(e){let n="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";return _.range(e).map(e=>n[_.random(n.length)]).join("")}function getCallCounter(){let e={},n={},t={},r=Array.from(arguments),o=r[0],a=r[1],i=r[2],s=r.slice(3);for(let r=0;r<a.length;r++){let i=a[r];n[i]=o[i],t[i]=0,e[i]=function(){return t[i]+=1,n[i].call(this,...arguments)},o[i]=e[i]}i(...s);for(let e=0,t=a.length;e<t;e++){let t=a[e];o[t]=n[t]}return t}describe("[Array]",function(){describe("[API]",function(){const e=require("../../src/array/ApiQuiz");describe("[lengthOfArrays]",function(){const{lengthOfArrays:n}=e;iterateIt("정답을 반환해야합니다",function(){let e=_.random(5,15),t=_.range(e).map(e=>_.range(_.random(10))),r=_.cloneDeep(t),o=n(t),a=r.map(e=>e.length);expect(o).toEqual(a)})}),describe("[popAndPush]",function(){const{popAndPush:n}=e;iterateIt("정답을 반환해야합니다",function(){let e=_.random(5,10),t=_.random(500),r=_.random(10),o=_.random(10),a=_.range(e).map(e=>_.random(500)),i=a.slice();_.range(r).forEach(e=>i.pop()),_.range(o).forEach(e=>i.push(t));let s=n(a,t,r,o);expect(s).toEqual(i)}),iterateIt(MESSAGE_CALL_COUNT,function(){let e=_.random(5,10),t=_.random(500),r=_.random(10),o=_.random(10),a=_.range(e).map(e=>_.random(500)),i=getCallCounter(Array.prototype,fnKeys,n,a,t,r,o);expect(i.pop).toBe(r,callCounterMessage("pop",r,i.pop)),expect(i.push).toBe(o,callCounterMessage("push",o,i.push))})}),describe("[shiftAndUnShift]",function(){const{shiftAndUnShift:n}=e;iterateIt("정답을 반환해야합니다",function(){let e=_.random(10),t=_.random(10),r=_.random(e.length),o=_.range(e).map(e=>_.random(50)),a=_.range(t).map(e=>_.random(50)),i=o.slice(),s=a.slice(),l=function(){for(let e=0;e<r;e++)s.unshift(i.shift());return s}(),c=n(o,a,r);expect(c).toEqual(l),expect(o).toEqual(i),expect(a).toEqual(s)}),iterateIt(MESSAGE_CALL_COUNT,function(){let e=_.random(10),t=_.random(10),r=_.random(e.length),o=_.range(e).map(e=>_.random(50)),a=_.range(t).map(e=>_.random(50)),i=getCallCounter(Array.prototype,fnKeys,n,o,a,r);expect(i.shift).toBe(r,callCounterMessage("shift",r,i.shift)),expect(i.unshift).toBe(r,callCounterMessage("unshift",r,i.unshift))})}),describe("[concatenation]",function(){const{concatenation:n}=e;iterateIt("정답을 반환해야합니다",function(){let e=_.random(1,10),t=_.random(2,5),r=_.range(e).map(e=>_.random(30)),o=r.slice(),a=n(r,t),i=_.range(t).map(e=>o.slice()).reduce((e,n)=>e.concat(n),[]);expect(a).toEqual(i)}),iterateIt(MESSAGE_CALL_COUNT,function(){let e=_.random(1,10),t=_.random(2,5),r=_.range(e).map(e=>_.random(30)),o=(r.slice(),getCallCounter(Array.prototype,fnKeys,n,r,t));expect(o.concat).toBe(t,callCounterMessage("concat",t,o.concat))})}),describe("[slicingArray]",function(){const{slicingArray:n}=e;iterateIt("정답을 반환해야합니다",function(){let e=_.random(5,10),t=_.random(e),r=_.random(e),o=randomUtils.randomArray(e,1,100),a=o.slice(),i=n(o,t,r),s=a.slice(0,t).concat(a.slice(-r));expect(i).toEqual(s)}),iterateIt(MESSAGE_CALL_COUNT,function(){let e=_.random(5,10),t=_.random(e),r=_.random(e),o=randomUtils.randomArray(e,1,100),a=getCallCounter(Array.prototype,fnKeys,n,o,t,r);expect(a.slice).toBe(2,callCounterMessage("slice",2,a.slice)),expect(a.concat).toBe(1,callCounterMessage("concat",1,a.concat))})}),describe("[overHalf]",function(){const{overHalf:n}=e;iterateIt("정답을 반환해야합니다",function(){let e=randomUtils.randomArray(_.random(5,10),1,100),t=e.slice();for(let r=0;r<10;r++){let o=n(e,e[r]),a=function(){let n=t.indexOf(e[r]);return-1!=n&&n>=t.length/2}();expect(o).toBe(a)}let r=n(e,101);expect(r).toBe(!1)}),iterateIt(MESSAGE_CALL_COUNT,function(){let e=_.random(5,10),t=randomUtils.randomArray(e,1,20),r=_.random(1,20),o=getCallCounter(Array.prototype,fnKeys,n,t,r);expect(o.indexOf).toBe(1,callCounterMessage("indexOf",1,o.indexOf))})}),describe("[hasUniqueTargetNumber]",function(){const{hasUniqueTargetNumber:n}=e;iterateIt("정답을 반환해야합니다",function(){let e=_.random(5,10),t=randomUtils.randomArray(e,1,100),r=t.slice(),o=t[_.random(e)],a=n(t,o),i=((e,n)=>{let t=e.indexOf(n),r=e.lastIndexOf(n);return-1!=t&&t==r})(r,o);expect(a).toBe(i)}),iterateIt(MESSAGE_CALL_COUNT,function(){let e=_.random(5,10),t=randomUtils.randomArray(e,1,20),r=_.random(1,20),o=getCallCounter(Array.prototype,fnKeys,n,t,r);expect(o.lastIndexOf).toBe(1,callCounterMessage("lastIndexOf",1,o.lastIndexOf)),expect(o.indexOf).toBe(1,callCounterMessage("indexOf",1,o.indexOf))})}),describe("[hasAnyElement]",function(){const{hasAnyElement:n}=e;iterateIt("정답을 반환해야합니다",function(){let e=_.random(10),t=_.random(10),r=randomUtils.randomArray(e,1,10),o=randomUtils.randomArray(t,1,5),a=r.slice(),i=o.slice(),s=n(r,o),l=function(){let e=0;for(let n=0,t=a.length;n<t;n++)i.includes(a[n])&&(e+=1);return e>0}();expect(s).toBe(l)}),iterateIt(MESSAGE_CALL_COUNT,function(){let e=_.random(10),t=_.random(10),r=randomUtils.randomArray(e,1,10),o=randomUtils.randomArray(t,1,5),a=r.slice(),i=o.slice(),s=getCallCounter(Array.prototype,fnKeys,n,r,o),l=getCallCounter(Array.prototype,fnKeys,function(e,n){let t=0;for(let e=0,n=a.length;e<n;e++)i.includes(a[e])&&(t+=1);return t>0},a,i);assertCallCounter("include",l,s)})}),describe("[splicingArray]",function(){const{splicingArray:n}=e,t=(e,n,t)=>{let r=e.splice(0,n),o=e.splice(0,t);return r.concat(o)};iterateIt("정답을 반환해야합니다",function(){let e=_.random(20),r=_.random(5,10),o=_.random(1,e-r),a=_.range(e).map(e=>_.random(1,100)),i=a.slice(),s=n(a,r,o),l=t(i,r,o);expect(s).toEqual(l)}),iterateIt(MESSAGE_CALL_COUNT,function(){let e=_.random(20),r=_.random(5,10),o=_.random(1,e-r),a=_.range(e).map(e=>_.random(1,100)),i=a.slice(),s=getCallCounter(Array.prototype,fnKeys,n,a,r,o),l=getCallCounter(Array.prototype,fnKeys,t,i,r,o);assertCallCounter("splice",s,l),assertCallCounter("concat",s,l)})}),describe("[reversingArray]",function(){const{reversingArray:n}=e;iterateIt("정답을 반환해야합니다",function(){let e=randomUtils.randomArray(_.random(5,10),1,100),t=e.slice(),r=n(e),o=t.slice().reverse();expect(r).toEqual(o)}),iterateIt(MESSAGE_CALL_COUNT,function(){let e=getCallCounter(Array.prototype,fnKeys,n,[1,2,3,4,5]);expect(e.reverse).toBe(1,callCounterMessage("reverse",1,e.reverse)),expect(e.slice).toBe(1,callCounterMessage("slice",1,e.slice))}),iterateIt(MESSAGE_NO_MUTATION,function(){let e=randomUtils.randomArray(_.random(5,10),1,100),t=e.slice();n(e),expect(e).toEqual(t)})}),describe("[findEvenAndOdds]",function(){const{findEvenAndOdds:n}=e;iterateIt("정답을 반환해야합니다",function(){let e=randomUtils.randomArray(10,1,100),t=randomUtils.randomArray(10,1,100),r=e.slice(),o=t.slice(),a=n(e,t,isEven,isOdd),i=function(){let e=r.find(isEven),n=o.find(isOdd),t=0;return e&&(t+=e),n&&(t+=n),t}();expect(a).toEqual(i)}),iterateIt(MESSAGE_CALL_COUNT,function(){let e=randomUtils.randomArray(10,1,100),t=randomUtils.randomArray(10,1,100),r=getCallCounter(Array.prototype,fnKeys,n,e,t,isEven,isOdd);expect(r.find).toBe(2,callCounterMessage("find",2,r.find))})}),describe("[findFirstMultipleOf6]",function(){const{findFirstMultipleOf6:n}=e;iterateIt("정답을 반환해야합니다",function(){let e=randomUtils.randomArray(_.random(5,10),1,100),t=e.slice(),r=n(e,isEven,isMultipleOf3),o=t.findIndex(e=>isEven(e)&&isMultipleOf3(e));expect(r).toBe(o)}),iterateIt(MESSAGE_CALL_COUNT,function(){let e=randomUtils.randomArray(_.random(5,10),1,100),t=getCallCounter(Array.prototype,fnKeys,n,e,isEven,isMultipleOf3),r={isEven:isEven,isMultipleOf3:isMultipleOf3},o=getCallCounter(r,Object.keys(r),n,e,isEven,isMultipleOf3),a=getCallCounter(Array.prototype,fnKeys,(e,n,t)=>e.findIndex(function(e){return n(e)&&t(e)}),e,isEven,isMultipleOf3),i=getCallCounter(r,Object.keys(r),(e,n,t)=>e.findIndex(function(e){return n(e)&&t(e)}),e,isEven,isMultipleOf3);assertCallCounter("findIndex",t,a),assertCallCounter("isEven",o,i),assertCallCounter("isMultipleOf3",o,i)})}),describe("[isEveryXEvenAndYOdd]",function(){const{isEveryXEvenAndYOdd:n}=e;iterateIt("정답을 반환해야합니다",function(){let e=_.random(10,20),t=_.range(e).map(e=>({x:_.random(1,100),y:_.random(2,100)}));console.log(t);let r=_.cloneDeep(t),o=n(t,isEven,isOdd),a=r.every(e=>isEven(e.x)&&isOdd(e.y));expect(o).toEqual(a)}),iterateIt(MESSAGE_CALL_COUNT,function(){let e=_.random(5,10),t=_.range(e).map(e=>({x:_.random(1,100),y:_.random(1,100)})),r=_.cloneDeep(t),o=getCallCounter(Array.prototype,fnKeys,n,t,isEven,isOdd),a=getCallCounter(Array.prototype,fnKeys,(e,n,t)=>r.every(e=>n(e.x)&&t(e.y)),r,isEven,isOdd),i={isEven:isEven,isOdd:isOdd},s=getCallCounter(i,Object.keys(i),n,t,isEven,isOdd),l=getCallCounter(i,Object.keys(i),(e,n,t)=>r.every(e=>n(e.x)&&t(e.y)),r,isEven,isOdd);expect(o.every).toBe(a.every,callCounterMessage("every",a.every,o.every)),expect(s.isEven).toBe(l.isEven,callCounterMessage("isEven"),l.isEven,s.isEven),expect(s.isOdd).toBe(l.isOdd,callCounterMessage("isOdd"),l.isOdd,s.isOdd)})}),describe("[isSomeoneGeniusDongmin]",function(){const{isSomeoneGeniusDongmin:n}=e,t=(e,n,t)=>e.some(e=>n(e.name)&&t(e.iq));iterateIt("정답을 반환해야합니다",function(){let e=_.random(5,10),t=_.range(e).map(e=>({name:randomStringGenerator(5),iq:_.random(120,180)})),r=_.cloneDeep(t);for(let n=0;n<e;n++)if(isGenius(r[n].iq)){r[n]="dongmin";break}let o=_.cloneDeep(r),a=n(r,isDongmin,isGenius),i=o.some(e=>isDongmin(e.name)&&isGenius(e.iq));expect(a).toBe(i);let s=_.cloneDeep(t),l=n(s,isDongmin,isGenius),c=s.some(e=>isDongmin(e.name)&&isGenius(e.iq));expect(l).toBe(c)}),iterateIt(MESSAGE_CALL_COUNT,function(){let e=_.random(5,10),r=_.range(e).map(e=>({name:randomStringGenerator(5),iq:_.random(120,180)})),o=_.cloneDeep(r);for(let n=0;n<e;n++)if(isGenius(o[n].iq)){o[n]="dongmin";break}let a=_.cloneDeep(o),i=getCallCounter(Array.prototype,fnKeys,n,o,isDongmin,isGenius),s=getCallCounter(Array.prototype,fnKeys,t,a,isDongmin,isGenius);expect(i.some).toBe(s.some,callCounterMessage("some",s.some,i.some));let l={isDongmin:isDongmin,isGenius:isGenius},c=getCallCounter(l,Object.keys(l),n,o,isDongmin,isGenius),d=getCallCounter(l,Object.keys(l),t,a,isDongmin,isGenius);expect(c.isDongmin).toBe(d.isDongmin,callCounterMessage("isEven"),d.isDongmin,c.isDongmin),expect(c.isGenius).toBe(d.isGenius,callCounterMessage("isOdd"),d.isGenius,c.isGenius)})}),describe("[sortByExamScoreSum]",function(){const{sortByExamScoreSum:n}=e,t=e=>{e.sort(function(e,n){return n.math+n.english-(e.math+e.english)})};iterateIt("정답을 반환해야합니다",function(){let e=_.random(5,10),r=_.range(e).map(e=>({math:_.random(0,100),english:_.random(0,100)})),o=_.cloneDeep(r);n(r),t(o),expect(r).toEqual(o)}),iterateIt(MESSAGE_CALL_COUNT,function(){let e=_.random(5,10),r=_.range(e).map(e=>({math:_.random(0,100),english:_.random(0,100)})),o=(_.cloneDeep(r),getCallCounter(Array.prototype,fnKeys,n,r)),a=getCallCounter(Array.prototype,fnKeys,t,r);assertCallCounter("sort",o,a)})}),describe("[mapToBooleanArray]",function(){const{mapToBooleanArray:n}=e,t=e=>e.map(e=>e>=0);iterateIt("정답을 반환해야합니다",function(){_.random(5,10);let e=randomUtils.randomArray(-100,100),r=(e.slice(),n(e)),o=t(e);expect(r).toEqual(o)}),iterateIt(MESSAGE_CALL_COUNT,function(){_.random(5,10);let e=randomUtils.randomArray(-100,100),r=getCallCounter(Array.prototype,fnKeys,n,e),o=getCallCounter(Array.prototype,fnKeys,t,e);expect(r.map).toBe(o.map,callCounterMessage("map",o.map,r.map))})}),describe("[mathScoreSumWithReduce]",function(){const{mathScoreSumWithReduce:n}=e,t=e=>e.reduce((e,n)=>n.math?e+n.math:e,0);iterateIt("정답을 반환해야합니다",function(){let e=_.random(5,10),r=_.range(e).map(e=>_.random(2)>=2?{english:_.random(0,100)}:{math:_.random(0,100),english:_.random(0,100)}),o=_.cloneDeep(r),a=n(r),i=t(o);expect(a).toBe(i)}),iterateIt(MESSAGE_CALL_COUNT,function(){let e=_.random(5,10),r=_.range(e).map(e=>_.random(2)>=2?{english:_.random(0,100)}:{math:_.random(0,100),english:_.random(0,100)}),o=_.cloneDeep(r),a=getCallCounter(Array.prototype,fnKeys,n,r),i=getCallCounter(Array.prototype,fnKeys,t,o);assertCallCounter("reduce",a,i)})}),describe("[filterScoresOver80]",function(){const{filterScoresOver80:n}=e,t=e=>e.filter(e=>!!e.math&&e.math>=80);iterateIt("정답을 반환해야합니다",function(){let e=_.random(5,10),r=_.range(e).map(e=>_.random(2)>=2?{english:_.random(50,100)}:{math:_.random(50,100),english:_.random(0,100)}),o=_.cloneDeep(r),a=n(r),i=t(o);expect(a).toEqual(i)}),iterateIt(MESSAGE_CALL_COUNT,function(){let e=_.random(5,10),r=_.range(e).map(e=>_.random(2)>=2?{english:_.random(0,100)}:{math:_.random(0,100),english:_.random(0,100)}),o=_.cloneDeep(r),a=getCallCounter(Array.prototype,fnKeys,n,r),i=getCallCounter(Array.prototype,fnKeys,t,o);expect(a.filter).toBe(i.filter,callCounterMessage("filter",i.filter,a.filter))})}),describe("[forEachSum]",function(){const{forEachSum:n}=e,t=function(e){let n=0;return e.forEach(e=>{n+=e.math}),n};iterateIt("정답을 반환해야합니다",function(){let e=_.random(5,10),r=_.range(e).map(e=>({math:_.random(50,100),english:_.random(0,100)})),o=_.cloneDeep(r),a=n(r),i=t(o);expect(a).toEqual(i)}),iterateIt(MESSAGE_CALL_COUNT,function(){let e=_.random(5,10),r=_.range(e).map(e=>({math:_.random(50,100),english:_.random(0,100)})),o=_.cloneDeep(r),a=(n(r),t(o),getCallCounter(Array.prototype,fnKeys,n,r)),i=getCallCounter(Array.prototype,fnKeys,t,o);assertCallCounter("forEachSum",a,i)})})})});const randomUtils={randomArray:(e,n,t)=>_.range(e).map(e=>_.random(n,t))};function isEven(e){return e%2==0}function isOdd(e){return e%2==1}function isMultipleOf3(e){return e%3==0}function isDongmin(e){return"dongmin"===e}function isGenius(e){return e>=150}